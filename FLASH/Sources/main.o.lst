   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25582C00 		.ascii	"%X,\000"
  27              		.align	2
  28              	.LC11:
  29 000c 255800   		.ascii	"%X\000"
  30 000f 00       		.align	2
  31              	.LC13:
  32 0010 2C00     		.ascii	",\000"
  33 0012 0000     		.section	.text.demo,"ax",%progbits
  34              		.align	2
  35              		.global	demo
  36              		.code	16
  37              		.thumb_func
  39              	demo:
  40              	.LFB0:
  41              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //struct AVG_IMAGE
   6:../Sources/main.c **** //{
   7:../Sources/main.c **** //	const uint16_t SIZE = 10;
   8:../Sources/main.c **** //	uint16_t N = 0;
   9:../Sources/main.c **** //	uint16_t** img;
  10:../Sources/main.c **** //	uint16_t* avg;
  11:../Sources/main.c **** //	
  12:../Sources/main.c **** //	void add(uint16_t* arr)
  13:../Sources/main.c **** //	{
  14:../Sources/main.c **** //		if(N < SIZE)
  15:../Sources/main.c **** //		{
  16:../Sources/main.c **** //			for(int i = 0; i < N; i++)
  17:../Sources/main.c **** //			{
  18:../Sources/main.c **** //				img[i] = arr;
  19:../Sources/main.c **** //			}
  20:../Sources/main.c **** //			for(int i = 0; i < 128; i++)
  21:../Sources/main.c **** //			{
  22:../Sources/main.c **** //				for(int j = 0; j < N; j++)
  23:../Sources/main.c **** //				{
  24:../Sources/main.c **** //					avg[i] += img[j][i];
  25:../Sources/main.c **** //				}
  26:../Sources/main.c **** //				avg[i] = avg[i] / N;
  27:../Sources/main.c **** //			}
  28:../Sources/main.c **** //		}
  29:../Sources/main.c **** //	}
  30:../Sources/main.c **** //	
  31:../Sources/main.c **** //	uint16_t* getAVG()
  32:../Sources/main.c **** //	{
  33:../Sources/main.c **** //		return avg;
  34:../Sources/main.c **** //	}
  35:../Sources/main.c **** //};
  36:../Sources/main.c **** 
  37:../Sources/main.c **** void demo()
  38:../Sources/main.c **** {
  42              		.loc 1 38 0
  43              		.cfi_startproc
  44 0000 90B5     		push	{r4, r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 83B0     		sub	sp, sp, #12
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 24
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
  39:../Sources/main.c **** 	uint32_t t,i=0;
  56              		.loc 1 39 0
  57 0006 0023     		mov	r3, #0
  58 0008 3B60     		str	r3, [r7]
  40:../Sources/main.c **** 	switch((TFC_GetDIP_Switch()>>1)&0x03)
  59              		.loc 1 40 0
  60 000a FFF7FEFF 		bl	TFC_GetDIP_Switch
  61 000e 031C     		mov	r3, r0
  62 0010 5B08     		lsr	r3, r3, #1
  63 0012 DBB2     		uxtb	r3, r3
  64 0014 1A1C     		mov	r2, r3
  65 0016 0323     		mov	r3, #3
  66 0018 1340     		and	r3, r2
  67 001a 022B     		cmp	r3, #2
  68 001c 00D1     		bne	.LCB26
  69 001e 79E0     		b	.L4	@long jump
  70              	.LCB26:
  71 0020 032B     		cmp	r3, #3
  72 0022 00D1     		bne	.LCB28
  73 0024 9CE0     		b	.L5	@long jump
  74              	.LCB28:
  75 0026 012B     		cmp	r3, #1
  76 0028 3ED0     		beq	.L3
  41:../Sources/main.c **** 	{
  42:../Sources/main.c **** 		default:
  43:../Sources/main.c **** 		case 0 :
  44:../Sources/main.c **** 			//Demo mode 0 just tests the switches and LED's
  45:../Sources/main.c **** 			if(TFC_PUSH_BUTTON_0_PRESSED)
  77              		.loc 1 45 0
  78 002a 874B     		ldr	r3, .L29
  79 002c 1A69     		ldr	r2, [r3, #16]
  80 002e 8023     		mov	r3, #128
  81 0030 9B01     		lsl	r3, r3, #6
  82 0032 1340     		and	r3, r2
  83 0034 04D0     		beq	.L6
  46:../Sources/main.c **** 				TFC_BAT_LED0_ON;
  84              		.loc 1 46 0
  85 0036 854B     		ldr	r3, .L29+4
  86 0038 8022     		mov	r2, #128
  87 003a 5200     		lsl	r2, r2, #1
  88 003c 5A60     		str	r2, [r3, #4]
  89 003e 03E0     		b	.L7
  90              	.L6:
  47:../Sources/main.c **** 			else
  48:../Sources/main.c **** 				TFC_BAT_LED0_OFF;
  91              		.loc 1 48 0
  92 0040 824B     		ldr	r3, .L29+4
  93 0042 8022     		mov	r2, #128
  94 0044 5200     		lsl	r2, r2, #1
  95 0046 9A60     		str	r2, [r3, #8]
  96              	.L7:
  49:../Sources/main.c **** 			
  50:../Sources/main.c **** 			if(TFC_PUSH_BUTTON_1_PRESSED)
  97              		.loc 1 50 0
  98 0048 7F4B     		ldr	r3, .L29
  99 004a 1A69     		ldr	r2, [r3, #16]
 100 004c 8023     		mov	r3, #128
 101 004e 9B02     		lsl	r3, r3, #10
 102 0050 1340     		and	r3, r2
 103 0052 04D0     		beq	.L8
  51:../Sources/main.c **** 				TFC_BAT_LED3_ON;
 104              		.loc 1 51 0
 105 0054 7D4B     		ldr	r3, .L29+4
 106 0056 8022     		mov	r2, #128
 107 0058 1201     		lsl	r2, r2, #4
 108 005a 5A60     		str	r2, [r3, #4]
 109 005c 03E0     		b	.L9
 110              	.L8:
  52:../Sources/main.c **** 			else
  53:../Sources/main.c **** 				TFC_BAT_LED3_OFF;
 111              		.loc 1 53 0
 112 005e 7B4B     		ldr	r3, .L29+4
 113 0060 8022     		mov	r2, #128
 114 0062 1201     		lsl	r2, r2, #4
 115 0064 9A60     		str	r2, [r3, #8]
 116              	.L9:
  54:../Sources/main.c **** 			
  55:../Sources/main.c **** 			
  56:../Sources/main.c **** 			if(TFC_GetDIP_Switch()&0x01)
 117              		.loc 1 56 0
 118 0066 FFF7FEFF 		bl	TFC_GetDIP_Switch
 119 006a 031C     		mov	r3, r0
 120 006c 1A1C     		mov	r2, r3
 121 006e 0123     		mov	r3, #1
 122 0070 1340     		and	r3, r2
 123 0072 04D0     		beq	.L10
  57:../Sources/main.c **** 				TFC_BAT_LED1_ON;
 124              		.loc 1 57 0
 125 0074 754B     		ldr	r3, .L29+4
 126 0076 8022     		mov	r2, #128
 127 0078 9200     		lsl	r2, r2, #2
 128 007a 5A60     		str	r2, [r3, #4]
 129 007c 03E0     		b	.L11
 130              	.L10:
  58:../Sources/main.c **** 			else
  59:../Sources/main.c **** 				TFC_BAT_LED1_OFF;
 131              		.loc 1 59 0
 132 007e 734B     		ldr	r3, .L29+4
 133 0080 8022     		mov	r2, #128
 134 0082 9200     		lsl	r2, r2, #2
 135 0084 9A60     		str	r2, [r3, #8]
 136              	.L11:
  60:../Sources/main.c **** 			
  61:../Sources/main.c **** 			if(TFC_GetDIP_Switch()&0x08)
 137              		.loc 1 61 0
 138 0086 FFF7FEFF 		bl	TFC_GetDIP_Switch
 139 008a 031C     		mov	r3, r0
 140 008c 1A1C     		mov	r2, r3
 141 008e 0823     		mov	r3, #8
 142 0090 1340     		and	r3, r2
 143 0092 04D0     		beq	.L12
  62:../Sources/main.c **** 				TFC_BAT_LED2_ON;
 144              		.loc 1 62 0
 145 0094 6D4B     		ldr	r3, .L29+4
 146 0096 8022     		mov	r2, #128
 147 0098 D200     		lsl	r2, r2, #3
 148 009a 5A60     		str	r2, [r3, #4]
  63:../Sources/main.c **** 			else
  64:../Sources/main.c **** 				TFC_BAT_LED2_OFF;
  65:../Sources/main.c **** 			
  66:../Sources/main.c **** 			break;
 149              		.loc 1 66 0
 150 009c D0E0     		b	.L1
 151              	.L12:
  64:../Sources/main.c **** 				TFC_BAT_LED2_OFF;
 152              		.loc 1 64 0
 153 009e 6B4B     		ldr	r3, .L29+4
 154 00a0 8022     		mov	r2, #128
 155 00a2 D200     		lsl	r2, r2, #3
 156 00a4 9A60     		str	r2, [r3, #8]
 157              		.loc 1 66 0
 158 00a6 CBE0     		b	.L1
 159              	.L3:
  67:../Sources/main.c **** 				
  68:../Sources/main.c **** 		case 1:
  69:../Sources/main.c **** 			
  70:../Sources/main.c **** 			//Demo mode 1 will just move the servos with the on-board potentiometers
  71:../Sources/main.c **** 			if(TFC_Ticker[0]>=20)
 160              		.loc 1 71 0
 161 00a8 694B     		ldr	r3, .L29+8
 162 00aa 1B68     		ldr	r3, [r3]
 163 00ac 132B     		cmp	r3, #19
 164 00ae 12D9     		bls	.L15
  72:../Sources/main.c **** 			{
  73:../Sources/main.c **** 				TFC_Ticker[0] = 0; //reset the Ticker
 165              		.loc 1 73 0
 166 00b0 674B     		ldr	r3, .L29+8
 167 00b2 0022     		mov	r2, #0
 168 00b4 1A60     		str	r2, [r3]
  74:../Sources/main.c **** 				//Every 20 mSeconds, update the Servos
  75:../Sources/main.c **** 				TFC_SetServo(0,TFC_ReadPot(0));
 169              		.loc 1 75 0
 170 00b6 0020     		mov	r0, #0
 171 00b8 FFF7FEFF 		bl	TFC_ReadPot
 172 00bc 031C     		add	r3, r0, #0
 173 00be 0020     		mov	r0, #0
 174 00c0 191C     		add	r1, r3, #0
 175 00c2 FFF7FEFF 		bl	TFC_SetServo
  76:../Sources/main.c **** 				TFC_SetServo(1,TFC_ReadPot(1));
 176              		.loc 1 76 0
 177 00c6 0120     		mov	r0, #1
 178 00c8 FFF7FEFF 		bl	TFC_ReadPot
 179 00cc 031C     		add	r3, r0, #0
 180 00ce 0120     		mov	r0, #1
 181 00d0 191C     		add	r1, r3, #0
 182 00d2 FFF7FEFF 		bl	TFC_SetServo
 183              	.L15:
  77:../Sources/main.c **** 			}
  78:../Sources/main.c **** 			//Let's put a pattern on the LEDs
  79:../Sources/main.c **** 			if(TFC_Ticker[1] >= 125)
 184              		.loc 1 79 0
 185 00d6 5E4B     		ldr	r3, .L29+8
 186 00d8 5B68     		ldr	r3, [r3, #4]
 187 00da 7C2B     		cmp	r3, #124
 188 00dc 0FD9     		bls	.L16
  80:../Sources/main.c **** 			{
  81:../Sources/main.c **** 				TFC_Ticker[1] = 0;
 189              		.loc 1 81 0
 190 00de 5C4B     		ldr	r3, .L29+8
 191 00e0 0022     		mov	r2, #0
 192 00e2 5A60     		str	r2, [r3, #4]
  82:../Sources/main.c **** 				t++;
 193              		.loc 1 82 0
 194 00e4 7B68     		ldr	r3, [r7, #4]
 195 00e6 0133     		add	r3, r3, #1
 196 00e8 7B60     		str	r3, [r7, #4]
  83:../Sources/main.c **** 				if(t>4)
 197              		.loc 1 83 0
 198 00ea 7B68     		ldr	r3, [r7, #4]
 199 00ec 042B     		cmp	r3, #4
 200 00ee 01D9     		bls	.L17
  84:../Sources/main.c **** 				{
  85:../Sources/main.c **** 					t=0;
 201              		.loc 1 85 0
 202 00f0 0023     		mov	r3, #0
 203 00f2 7B60     		str	r3, [r7, #4]
 204              	.L17:
  86:../Sources/main.c **** 				}			
  87:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 205              		.loc 1 87 0
 206 00f4 7B68     		ldr	r3, [r7, #4]
 207 00f6 DBB2     		uxtb	r3, r3
 208 00f8 181C     		mov	r0, r3
 209 00fa FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 210              	.L16:
  88:../Sources/main.c **** 			}
  89:../Sources/main.c **** 			
  90:../Sources/main.c **** 			TFC_SetMotorPWM(0,0); //Make sure motors are off
 211              		.loc 1 90 0
 212 00fe 0022     		mov	r2, #0
 213 0100 0023     		mov	r3, #0
 214 0102 101C     		add	r0, r2, #0
 215 0104 191C     		add	r1, r3, #0
 216 0106 FFF7FEFF 		bl	TFC_SetMotorPWM
  91:../Sources/main.c **** 			TFC_HBRIDGE_DISABLE;
 217              		.loc 1 91 0
 218 010a 524B     		ldr	r3, .L29+12
 219 010c 8022     		mov	r2, #128
 220 010e 9203     		lsl	r2, r2, #14
 221 0110 9A60     		str	r2, [r3, #8]
  92:../Sources/main.c **** 		
  93:../Sources/main.c **** 		
  94:../Sources/main.c **** 			break;
 222              		.loc 1 94 0
 223 0112 95E0     		b	.L1
 224              	.L4:
  95:../Sources/main.c **** 			
  96:../Sources/main.c **** 		case 2 :
  97:../Sources/main.c **** 			
  98:../Sources/main.c **** 			//Demo Mode 2 will use the Pots to make the motors move
  99:../Sources/main.c **** 			TFC_HBRIDGE_ENABLE;
 225              		.loc 1 99 0
 226 0114 4F4B     		ldr	r3, .L29+12
 227 0116 8022     		mov	r2, #128
 228 0118 9203     		lsl	r2, r2, #14
 229 011a 5A60     		str	r2, [r3, #4]
 100:../Sources/main.c **** 			TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(1));
 230              		.loc 1 100 0
 231 011c 0020     		mov	r0, #0
 232 011e FFF7FEFF 		bl	TFC_ReadPot
 233 0122 041C     		add	r4, r0, #0
 234 0124 0120     		mov	r0, #1
 235 0126 FFF7FEFF 		bl	TFC_ReadPot
 236 012a 031C     		add	r3, r0, #0
 237 012c 201C     		add	r0, r4, #0
 238 012e 191C     		add	r1, r3, #0
 239 0130 FFF7FEFF 		bl	TFC_SetMotorPWM
 101:../Sources/main.c **** 					
 102:../Sources/main.c **** 			//Let's put a pattern on the LEDs
 103:../Sources/main.c **** 			if(TFC_Ticker[1] >= 125)
 240              		.loc 1 103 0
 241 0134 464B     		ldr	r3, .L29+8
 242 0136 5B68     		ldr	r3, [r3, #4]
 243 0138 7C2B     		cmp	r3, #124
 244 013a 00D8     		bhi	.LCB190
 245 013c 7FE0     		b	.L28	@long jump
 246              	.LCB190:
 104:../Sources/main.c **** 				{
 105:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 247              		.loc 1 105 0
 248 013e 444B     		ldr	r3, .L29+8
 249 0140 0022     		mov	r2, #0
 250 0142 5A60     		str	r2, [r3, #4]
 106:../Sources/main.c **** 						t++;
 251              		.loc 1 106 0
 252 0144 7B68     		ldr	r3, [r7, #4]
 253 0146 0133     		add	r3, r3, #1
 254 0148 7B60     		str	r3, [r7, #4]
 107:../Sources/main.c **** 						if(t>4)
 255              		.loc 1 107 0
 256 014a 7B68     		ldr	r3, [r7, #4]
 257 014c 042B     		cmp	r3, #4
 258 014e 01D9     		bls	.L19
 108:../Sources/main.c **** 						{
 109:../Sources/main.c **** 							t=0;
 259              		.loc 1 109 0
 260 0150 0023     		mov	r3, #0
 261 0152 7B60     		str	r3, [r7, #4]
 262              	.L19:
 110:../Sources/main.c **** 						}			
 111:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 263              		.loc 1 111 0
 264 0154 7B68     		ldr	r3, [r7, #4]
 265 0156 DBB2     		uxtb	r3, r3
 266 0158 181C     		mov	r0, r3
 267 015a FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 112:../Sources/main.c **** 				}
 113:../Sources/main.c **** 			break;
 268              		.loc 1 113 0
 269 015e 6EE0     		b	.L28
 270              	.L5:
 114:../Sources/main.c **** 		
 115:../Sources/main.c **** 		case 3 :
 116:../Sources/main.c **** 		
 117:../Sources/main.c **** 			//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
 118:../Sources/main.c **** 			//Labview Application
 119:../Sources/main.c **** 			
 120:../Sources/main.c **** 		
 121:../Sources/main.c **** //			if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 122:../Sources/main.c **** //			{
 123:../Sources/main.c **** 				 TFC_Ticker[0] = 0;
 271              		.loc 1 123 0
 272 0160 3B4B     		ldr	r3, .L29+8
 273 0162 0022     		mov	r2, #0
 274 0164 1A60     		str	r2, [r3]
 124:../Sources/main.c **** 				 LineScanImageReady=0;
 275              		.loc 1 124 0
 276 0166 3C4B     		ldr	r3, .L29+16
 277 0168 0022     		mov	r2, #0
 278 016a 1A70     		strb	r2, [r3]
 125:../Sources/main.c **** 				 TERMINAL_PRINTF("\r\n");
 279              		.loc 1 125 0
 280 016c 3B4A     		ldr	r2, .L29+20
 281 016e 3C4B     		ldr	r3, .L29+24
 282 0170 101C     		mov	r0, r2
 283 0172 191C     		mov	r1, r3
 284 0174 FFF7FEFF 		bl	Qprintf
 126:../Sources/main.c **** 				 TERMINAL_PRINTF("L:");
 285              		.loc 1 126 0
 286 0178 384A     		ldr	r2, .L29+20
 287 017a 3A4B     		ldr	r3, .L29+28
 288 017c 101C     		mov	r0, r2
 289 017e 191C     		mov	r1, r3
 290 0180 FFF7FEFF 		bl	Qprintf
 127:../Sources/main.c **** 				 
 128:../Sources/main.c **** 					if(t==0)
 291              		.loc 1 128 0
 292 0184 7B68     		ldr	r3, [r7, #4]
 293 0186 002B     		cmp	r3, #0
 294 0188 02D1     		bne	.L20
 129:../Sources/main.c **** 						t=3;
 295              		.loc 1 129 0
 296 018a 0323     		mov	r3, #3
 297 018c 7B60     		str	r3, [r7, #4]
 298 018e 02E0     		b	.L21
 299              	.L20:
 130:../Sources/main.c **** 					else
 131:../Sources/main.c **** 						t--;
 300              		.loc 1 131 0
 301 0190 7B68     		ldr	r3, [r7, #4]
 302 0192 013B     		sub	r3, r3, #1
 303 0194 7B60     		str	r3, [r7, #4]
 304              	.L21:
 132:../Sources/main.c **** 					
 133:../Sources/main.c **** 					 TFC_SetBatteryLED_Level(t);
 305              		.loc 1 133 0
 306 0196 7B68     		ldr	r3, [r7, #4]
 307 0198 DBB2     		uxtb	r3, r3
 308 019a 181C     		mov	r0, r3
 309 019c FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 134:../Sources/main.c **** 
 135:../Sources/main.c **** 					 /*
 136:../Sources/main.c **** 					  * uint16_t** image = null;
 137:../Sources/main.c **** 					  * uint16_t* avg = null;
 138:../Sources/main.c **** 					  * if(image[0] == null && image[1] == null)
 139:../Sources/main.c **** 					  * 	image[0] = LineScanImage0;
 140:../Sources/main.c **** 					  * else if(image[1] == null)
 141:../Sources/main.c **** 					  * 	image[1] = LineScanImage1;
 142:../Sources/main.c **** 					  */
 143:../Sources/main.c **** 					 
 144:../Sources/main.c **** 					 for(i=0;i<128;i++)
 310              		.loc 1 144 0
 311 01a0 0023     		mov	r3, #0
 312 01a2 3B60     		str	r3, [r7]
 313 01a4 10E0     		b	.L22
 314              	.L23:
 145:../Sources/main.c **** 					 {
 146:../Sources/main.c **** 						 /*
 147:../Sources/main.c **** 						  * if(image[0] != null && image[1] != null)
 148:../Sources/main.c **** 						  * 	avg[i] = (image[0][i] + image[1][i]) / 2;
 149:../Sources/main.c **** 						  * else avg[i] = image[0];
 150:../Sources/main.c **** 						  * 
 151:../Sources/main.c **** 						  * TERMINAL_PRINTF("%X,", (avg[i+1] - avg[i]));
 152:../Sources/main.c **** 						  */
 153:../Sources/main.c **** 						 TERMINAL_PRINTF("%X,",LineScanImage0[i]);
 315              		.loc 1 153 0
 316 01a6 304B     		ldr	r3, .L29+32
 317 01a8 1A68     		ldr	r2, [r3]
 318 01aa 3B68     		ldr	r3, [r7]
 319 01ac 5B00     		lsl	r3, r3, #1
 320 01ae D318     		add	r3, r2, r3
 321 01b0 1B88     		ldrh	r3, [r3]
 322 01b2 9BB2     		uxth	r3, r3
 323 01b4 2949     		ldr	r1, .L29+20
 324 01b6 2D4A     		ldr	r2, .L29+36
 325 01b8 081C     		mov	r0, r1
 326 01ba 111C     		mov	r1, r2
 327 01bc 1A1C     		mov	r2, r3
 328 01be FFF7FEFF 		bl	Qprintf
 144:../Sources/main.c **** 					 for(i=0;i<128;i++)
 329              		.loc 1 144 0
 330 01c2 3B68     		ldr	r3, [r7]
 331 01c4 0133     		add	r3, r3, #1
 332 01c6 3B60     		str	r3, [r7]
 333              	.L22:
 144:../Sources/main.c **** 					 for(i=0;i<128;i++)
 334              		.loc 1 144 0 is_stmt 0
 335 01c8 3B68     		ldr	r3, [r7]
 336 01ca 7F2B     		cmp	r3, #127
 337 01cc EBD9     		bls	.L23
 154:../Sources/main.c **** 					 }
 155:../Sources/main.c **** 					
 156:../Sources/main.c **** 					 for(i=0;i<128;i++)
 338              		.loc 1 156 0 is_stmt 1
 339 01ce 0023     		mov	r3, #0
 340 01d0 3B60     		str	r3, [r7]
 341 01d2 30E0     		b	.L24
 342              	.L27:
 157:../Sources/main.c **** 					 {
 158:../Sources/main.c **** 							 TERMINAL_PRINTF("%X",LineScanImage1[i]);
 343              		.loc 1 158 0
 344 01d4 264B     		ldr	r3, .L29+40
 345 01d6 1A68     		ldr	r2, [r3]
 346 01d8 3B68     		ldr	r3, [r7]
 347 01da 5B00     		lsl	r3, r3, #1
 348 01dc D318     		add	r3, r2, r3
 349 01de 1B88     		ldrh	r3, [r3]
 350 01e0 9BB2     		uxth	r3, r3
 351 01e2 1E49     		ldr	r1, .L29+20
 352 01e4 234A     		ldr	r2, .L29+44
 353 01e6 081C     		mov	r0, r1
 354 01e8 111C     		mov	r1, r2
 355 01ea 1A1C     		mov	r2, r3
 356 01ec FFF7FEFF 		bl	Qprintf
 159:../Sources/main.c **** 							 if(i==127)
 357              		.loc 1 159 0
 358 01f0 3B68     		ldr	r3, [r7]
 359 01f2 7F2B     		cmp	r3, #127
 360 01f4 0ED1     		bne	.L25
 160:../Sources/main.c **** 								 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 361              		.loc 1 160 0
 362 01f6 1E4B     		ldr	r3, .L29+40
 363 01f8 1A68     		ldr	r2, [r3]
 364 01fa 3B68     		ldr	r3, [r7]
 365 01fc 5B00     		lsl	r3, r3, #1
 366 01fe D318     		add	r3, r2, r3
 367 0200 1B88     		ldrh	r3, [r3]
 368 0202 9BB2     		uxth	r3, r3
 369 0204 1549     		ldr	r1, .L29+20
 370 0206 164A     		ldr	r2, .L29+24
 371 0208 081C     		mov	r0, r1
 372 020a 111C     		mov	r1, r2
 373 020c 1A1C     		mov	r2, r3
 374 020e FFF7FEFF 		bl	Qprintf
 375 0212 0DE0     		b	.L26
 376              	.L25:
 161:../Sources/main.c **** 							 else
 162:../Sources/main.c **** 								 TERMINAL_PRINTF(",",LineScanImage1[i]);
 377              		.loc 1 162 0
 378 0214 164B     		ldr	r3, .L29+40
 379 0216 1A68     		ldr	r2, [r3]
 380 0218 3B68     		ldr	r3, [r7]
 381 021a 5B00     		lsl	r3, r3, #1
 382 021c D318     		add	r3, r2, r3
 383 021e 1B88     		ldrh	r3, [r3]
 384 0220 9BB2     		uxth	r3, r3
 385 0222 0E49     		ldr	r1, .L29+20
 386 0224 144A     		ldr	r2, .L29+48
 387 0226 081C     		mov	r0, r1
 388 0228 111C     		mov	r1, r2
 389 022a 1A1C     		mov	r2, r3
 390 022c FFF7FEFF 		bl	Qprintf
 391              	.L26:
 156:../Sources/main.c **** 					 for(i=0;i<128;i++)
 392              		.loc 1 156 0
 393 0230 3B68     		ldr	r3, [r7]
 394 0232 0133     		add	r3, r3, #1
 395 0234 3B60     		str	r3, [r7]
 396              	.L24:
 156:../Sources/main.c **** 					 for(i=0;i<128;i++)
 397              		.loc 1 156 0 is_stmt 0
 398 0236 3B68     		ldr	r3, [r7]
 399 0238 7F2B     		cmp	r3, #127
 400 023a CBD9     		bls	.L27
 163:../Sources/main.c **** 					}										
 164:../Sources/main.c **** 						
 165:../Sources/main.c **** //				}
 166:../Sources/main.c **** 			break;
 401              		.loc 1 166 0 is_stmt 1
 402 023c 00E0     		b	.L1
 403              	.L28:
 113:../Sources/main.c **** 			break;
 404              		.loc 1 113 0
 405 023e C046     		mov	r8, r8
 406              	.L1:
 167:../Sources/main.c **** 	}
 168:../Sources/main.c **** }
 407              		.loc 1 168 0
 408 0240 BD46     		mov	sp, r7
 409 0242 03B0     		add	sp, sp, #12
 410              		@ sp needed for prologue
 411 0244 90BD     		pop	{r4, r7, pc}
 412              	.L30:
 413 0246 C046     		.align	2
 414              	.L29:
 415 0248 80F00F40 		.word	1074786432
 416 024c 40F00F40 		.word	1074786368
 417 0250 00000000 		.word	TFC_Ticker
 418 0254 00F10F40 		.word	1074786560
 419 0258 00000000 		.word	LineScanImageReady
 420 025c 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 421 0260 00000000 		.word	.LC3
 422 0264 04000000 		.word	.LC5
 423 0268 00000000 		.word	LineScanImage0
 424 026c 08000000 		.word	.LC8
 425 0270 00000000 		.word	LineScanImage1
 426 0274 0C000000 		.word	.LC11
 427 0278 10000000 		.word	.LC13
 428              		.cfi_endproc
 429              	.LFE0:
 431              		.section	.text.SetServoDirection,"ax",%progbits
 432              		.align	2
 433              		.global	SetServoDirection
 434              		.code	16
 435              		.thumb_func
 437              	SetServoDirection:
 438              	.LFB1:
 169:../Sources/main.c **** 
 170:../Sources/main.c **** void SetServoDirection(int d)
 171:../Sources/main.c **** {
 439              		.loc 1 171 0
 440              		.cfi_startproc
 441 0000 80B5     		push	{r7, lr}
 442              	.LCFI3:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 0002 82B0     		sub	sp, sp, #8
 447              	.LCFI4:
 448              		.cfi_def_cfa_offset 16
 449 0004 00AF     		add	r7, sp, #0
 450              	.LCFI5:
 451              		.cfi_def_cfa_register 7
 452 0006 7860     		str	r0, [r7, #4]
 172:../Sources/main.c **** 	TFC_Delay_mS(20);
 453              		.loc 1 172 0
 454 0008 1420     		mov	r0, #20
 455 000a FFF7FEFF 		bl	TFC_Delay_mS
 173:../Sources/main.c **** 	switch(d)
 456              		.loc 1 173 0
 457 000e 7B68     		ldr	r3, [r7, #4]
 458 0010 5A1C     		add	r2, r3, #1
 459 0012 02D0     		beq	.L33
 460 0014 012B     		cmp	r3, #1
 461 0016 06D0     		beq	.L34
 462 0018 0CE0     		b	.L36
 463              	.L33:
 174:../Sources/main.c **** 	{
 175:../Sources/main.c **** 	case -1: 
 176:../Sources/main.c **** 		TFC_SetServo(0, -1.0);
 464              		.loc 1 176 0
 465 001a 0C4B     		ldr	r3, .L37
 466 001c 0020     		mov	r0, #0
 467 001e 191C     		add	r1, r3, #0
 468 0020 FFF7FEFF 		bl	TFC_SetServo
 177:../Sources/main.c **** 		break;
 469              		.loc 1 177 0
 470 0024 0CE0     		b	.L35
 471              	.L34:
 178:../Sources/main.c **** 	case 1:
 179:../Sources/main.c **** 		TFC_SetServo(0,1.0);
 472              		.loc 1 179 0
 473 0026 FE23     		mov	r3, #254
 474 0028 9B05     		lsl	r3, r3, #22
 475 002a 0020     		mov	r0, #0
 476 002c 191C     		add	r1, r3, #0
 477 002e FFF7FEFF 		bl	TFC_SetServo
 180:../Sources/main.c **** 		break;
 478              		.loc 1 180 0
 479 0032 05E0     		b	.L35
 480              	.L36:
 181:../Sources/main.c **** 	default:
 182:../Sources/main.c **** 		TFC_SetServo(0,0);
 481              		.loc 1 182 0
 482 0034 0023     		mov	r3, #0
 483 0036 0020     		mov	r0, #0
 484 0038 191C     		add	r1, r3, #0
 485 003a FFF7FEFF 		bl	TFC_SetServo
 183:../Sources/main.c **** 		break;
 486              		.loc 1 183 0
 487 003e C046     		mov	r8, r8
 488              	.L35:
 184:../Sources/main.c **** 	}
 185:../Sources/main.c **** 	TFC_Delay_mS(100);
 489              		.loc 1 185 0
 490 0040 6420     		mov	r0, #100
 491 0042 FFF7FEFF 		bl	TFC_Delay_mS
 186:../Sources/main.c **** }
 492              		.loc 1 186 0
 493 0046 BD46     		mov	sp, r7
 494 0048 02B0     		add	sp, sp, #8
 495              		@ sp needed for prologue
 496 004a 80BD     		pop	{r7, pc}
 497              	.L38:
 498              		.align	2
 499              	.L37:
 500 004c 000080BF 		.word	-1082130432
 501              		.cfi_endproc
 502              	.LFE1:
 504              		.section	.text.Drive,"ax",%progbits
 505              		.align	2
 506              		.global	Drive
 507              		.code	16
 508              		.thumb_func
 510              	Drive:
 511              	.LFB2:
 187:../Sources/main.c **** 
 188:../Sources/main.c **** void Drive(int delayMS, float strength)
 189:../Sources/main.c **** {
 512              		.loc 1 189 0
 513              		.cfi_startproc
 514 0000 80B5     		push	{r7, lr}
 515              	.LCFI6:
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 7, -8
 518              		.cfi_offset 14, -4
 519 0002 82B0     		sub	sp, sp, #8
 520              	.LCFI7:
 521              		.cfi_def_cfa_offset 16
 522 0004 00AF     		add	r7, sp, #0
 523              	.LCFI8:
 524              		.cfi_def_cfa_register 7
 525 0006 7860     		str	r0, [r7, #4]
 526 0008 3960     		str	r1, [r7]
 190:../Sources/main.c **** 	TFC_HBRIDGE_ENABLE;
 527              		.loc 1 190 0
 528 000a 0A4B     		ldr	r3, .L40
 529 000c 8022     		mov	r2, #128
 530 000e 9203     		lsl	r2, r2, #14
 531 0010 5A60     		str	r2, [r3, #4]
 191:../Sources/main.c **** 	TFC_SetMotorPWM(strength,strength);
 532              		.loc 1 191 0
 533 0012 3A68     		ldr	r2, [r7]
 534 0014 3B68     		ldr	r3, [r7]
 535 0016 101C     		add	r0, r2, #0
 536 0018 191C     		add	r1, r3, #0
 537 001a FFF7FEFF 		bl	TFC_SetMotorPWM
 192:../Sources/main.c **** 	TFC_Delay_mS(delayMS);
 538              		.loc 1 192 0
 539 001e 7B68     		ldr	r3, [r7, #4]
 540 0020 181C     		mov	r0, r3
 541 0022 FFF7FEFF 		bl	TFC_Delay_mS
 193:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 542              		.loc 1 193 0
 543 0026 034B     		ldr	r3, .L40
 544 0028 8022     		mov	r2, #128
 545 002a 9203     		lsl	r2, r2, #14
 546 002c 9A60     		str	r2, [r3, #8]
 194:../Sources/main.c **** }
 547              		.loc 1 194 0
 548 002e BD46     		mov	sp, r7
 549 0030 02B0     		add	sp, sp, #8
 550              		@ sp needed for prologue
 551 0032 80BD     		pop	{r7, pc}
 552              	.L41:
 553              		.align	2
 554              	.L40:
 555 0034 00F10F40 		.word	1074786560
 556              		.cfi_endproc
 557              	.LFE2:
 559              		.section	.text.figure8,"ax",%progbits
 560              		.align	2
 561              		.global	figure8
 562              		.code	16
 563              		.thumb_func
 565              	figure8:
 566              	.LFB3:
 195:../Sources/main.c **** 
 196:../Sources/main.c **** void figure8()
 197:../Sources/main.c **** {
 567              		.loc 1 197 0
 568              		.cfi_startproc
 569 0000 80B5     		push	{r7, lr}
 570              	.LCFI9:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 84B0     		sub	sp, sp, #16
 575              	.LCFI10:
 576              		.cfi_def_cfa_offset 24
 577 0004 00AF     		add	r7, sp, #0
 578              	.LCFI11:
 579              		.cfi_def_cfa_register 7
 198:../Sources/main.c **** 
 199:../Sources/main.c **** 	int RESET = 0;
 580              		.loc 1 199 0
 581 0006 0023     		mov	r3, #0
 582 0008 FB60     		str	r3, [r7, #12]
 200:../Sources/main.c **** 	int LEFT = -1;
 583              		.loc 1 200 0
 584 000a 0123     		mov	r3, #1
 585 000c 5B42     		neg	r3, r3
 586 000e BB60     		str	r3, [r7, #8]
 201:../Sources/main.c **** 	int RIGHT = 1;
 587              		.loc 1 201 0
 588 0010 0123     		mov	r3, #1
 589 0012 7B60     		str	r3, [r7, #4]
 202:../Sources/main.c **** 	
 203:../Sources/main.c **** 	while(!TFC_PUSH_BUTTON_0_PRESSED) continue;
 590              		.loc 1 203 0
 591 0014 C046     		mov	r8, r8
 592 0016 00E0     		b	.L43
 593              	.L47:
 594 0018 C046     		mov	r8, r8
 595              	.L43:
 596              		.loc 1 203 0 is_stmt 0
 597 001a 284B     		ldr	r3, .L49
 598 001c 1A69     		ldr	r2, [r3, #16]
 599 001e 8023     		mov	r3, #128
 600 0020 9B01     		lsl	r3, r3, #6
 601 0022 1340     		and	r3, r2
 602 0024 F8D0     		beq	.L47
 204:../Sources/main.c **** 	TFC_Delay_mS(3000);
 603              		.loc 1 204 0 is_stmt 1
 604 0026 264B     		ldr	r3, .L49+4
 605 0028 181C     		mov	r0, r3
 606 002a FFF7FEFF 		bl	TFC_Delay_mS
 205:../Sources/main.c **** 	
 206:../Sources/main.c **** 	TFC_Task();
 607              		.loc 1 206 0
 608 002e FFF7FEFF 		bl	TFC_Task
 207:../Sources/main.c **** 	
 208:../Sources/main.c **** 	
 209:../Sources/main.c **** 	SetServoDirection(LEFT);
 609              		.loc 1 209 0
 610 0032 BB68     		ldr	r3, [r7, #8]
 611 0034 181C     		mov	r0, r3
 612 0036 FFF7FEFF 		bl	SetServoDirection
 210:../Sources/main.c **** 	Drive(3000, 0.55);
 613              		.loc 1 210 0
 614 003a 214A     		ldr	r2, .L49+4
 615 003c 214B     		ldr	r3, .L49+8
 616 003e 101C     		mov	r0, r2
 617 0040 191C     		add	r1, r3, #0
 618 0042 FFF7FEFF 		bl	Drive
 211:../Sources/main.c **** 	TFC_SetServo(0,0.05);
 619              		.loc 1 211 0
 620 0046 204B     		ldr	r3, .L49+12
 621 0048 0020     		mov	r0, #0
 622 004a 191C     		add	r1, r3, #0
 623 004c FFF7FEFF 		bl	TFC_SetServo
 212:../Sources/main.c **** 	TFC_Delay_mS(3000);
 624              		.loc 1 212 0
 625 0050 1B4B     		ldr	r3, .L49+4
 626 0052 181C     		mov	r0, r3
 627 0054 FFF7FEFF 		bl	TFC_Delay_mS
 213:../Sources/main.c **** 	Drive(4000, 0.35);
 628              		.loc 1 213 0
 629 0058 FA23     		mov	r3, #250
 630 005a 1A01     		lsl	r2, r3, #4
 631 005c 1B4B     		ldr	r3, .L49+16
 632 005e 101C     		mov	r0, r2
 633 0060 191C     		add	r1, r3, #0
 634 0062 FFF7FEFF 		bl	Drive
 214:../Sources/main.c **** 
 215:../Sources/main.c **** 	while(!TFC_PUSH_BUTTON_0_PRESSED) continue;
 635              		.loc 1 215 0
 636 0066 C046     		mov	r8, r8
 637 0068 00E0     		b	.L45
 638              	.L48:
 639 006a C046     		mov	r8, r8
 640              	.L45:
 641              		.loc 1 215 0 is_stmt 0
 642 006c 134B     		ldr	r3, .L49
 643 006e 1A69     		ldr	r2, [r3, #16]
 644 0070 8023     		mov	r3, #128
 645 0072 9B01     		lsl	r3, r3, #6
 646 0074 1340     		and	r3, r2
 647 0076 F8D0     		beq	.L48
 216:../Sources/main.c **** 	TFC_Delay_mS(3000); 
 648              		.loc 1 216 0 is_stmt 1
 649 0078 114B     		ldr	r3, .L49+4
 650 007a 181C     		mov	r0, r3
 651 007c FFF7FEFF 		bl	TFC_Delay_mS
 217:../Sources/main.c **** 	
 218:../Sources/main.c **** 	SetServoDirection(RIGHT);
 652              		.loc 1 218 0
 653 0080 7B68     		ldr	r3, [r7, #4]
 654 0082 181C     		mov	r0, r3
 655 0084 FFF7FEFF 		bl	SetServoDirection
 219:../Sources/main.c **** 	Drive(3000, 0.55 );
 656              		.loc 1 219 0
 657 0088 0D4A     		ldr	r2, .L49+4
 658 008a 0E4B     		ldr	r3, .L49+8
 659 008c 101C     		mov	r0, r2
 660 008e 191C     		add	r1, r3, #0
 661 0090 FFF7FEFF 		bl	Drive
 220:../Sources/main.c **** 	TFC_SetServo(0,-0.05);
 662              		.loc 1 220 0
 663 0094 0E4B     		ldr	r3, .L49+20
 664 0096 0020     		mov	r0, #0
 665 0098 191C     		add	r1, r3, #0
 666 009a FFF7FEFF 		bl	TFC_SetServo
 221:../Sources/main.c **** 	TFC_Delay_mS(3000);
 667              		.loc 1 221 0
 668 009e 084B     		ldr	r3, .L49+4
 669 00a0 181C     		mov	r0, r3
 670 00a2 FFF7FEFF 		bl	TFC_Delay_mS
 222:../Sources/main.c **** 	Drive(4000, 0.35);
 671              		.loc 1 222 0
 672 00a6 FA23     		mov	r3, #250
 673 00a8 1A01     		lsl	r2, r3, #4
 674 00aa 084B     		ldr	r3, .L49+16
 675 00ac 101C     		mov	r0, r2
 676 00ae 191C     		add	r1, r3, #0
 677 00b0 FFF7FEFF 		bl	Drive
 223:../Sources/main.c **** }
 678              		.loc 1 223 0
 679 00b4 BD46     		mov	sp, r7
 680 00b6 04B0     		add	sp, sp, #16
 681              		@ sp needed for prologue
 682 00b8 80BD     		pop	{r7, pc}
 683              	.L50:
 684 00ba C046     		.align	2
 685              	.L49:
 686 00bc 80F00F40 		.word	1074786432
 687 00c0 B80B0000 		.word	3000
 688 00c4 CDCC0C3F 		.word	1057803469
 689 00c8 CDCC4C3D 		.word	1028443341
 690 00cc 3333B33E 		.word	1051931443
 691 00d0 CDCC4CBD 		.word	-1119040307
 692              		.cfi_endproc
 693              	.LFE3:
 695              		.section	.text.main,"ax",%progbits
 696              		.align	2
 697              		.global	main
 698              		.code	16
 699              		.thumb_func
 701              	main:
 702              	.LFB4:
 224:../Sources/main.c **** 
 225:../Sources/main.c **** int main(void)
 226:../Sources/main.c **** {
 703              		.loc 1 226 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              	.LCFI12:
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 00AF     		add	r7, sp, #0
 711              	.LCFI13:
 712              		.cfi_def_cfa_register 7
 227:../Sources/main.c **** 	
 228:../Sources/main.c **** 	TFC_Init();
 713              		.loc 1 228 0
 714 0004 FFF7FEFF 		bl	TFC_Init
 229:../Sources/main.c **** 	
 230:../Sources/main.c **** 	TFC_Task();
 715              		.loc 1 230 0
 716 0008 FFF7FEFF 		bl	TFC_Task
 717              	.L52:
 231:../Sources/main.c **** 	
 232:../Sources/main.c **** 	for(;;)
 233:../Sources/main.c **** 	{
 234:../Sources/main.c **** 		demo();
 718              		.loc 1 234 0
 719 000c FFF7FEFF 		bl	demo
 235:../Sources/main.c **** 	}
 720              		.loc 1 235 0
 721 0010 FCE7     		b	.L52
 722              		.cfi_endproc
 723              	.LFE4:
 725 0012 C046     		.text
 726              	.Letext0:
 727              		.file 2 "C:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 728              		.file 3 "C:/Users/Josh/workspace/FRDM-TFC/Project_Headers/MKL25Z4.h"
 729              		.file 4 "C:/Users/Josh/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 730              		.file 5 "C:/Users/Josh/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 731              		.file 6 "C:/Users/Josh/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 732              		.file 7 "C:/Users/Josh/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:18     .rodata:00000000 $d
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:34     .text.demo:00000000 $t
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:39     .text.demo:00000000 demo
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:415    .text.demo:00000248 $d
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:432    .text.SetServoDirection:00000000 $t
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:437    .text.SetServoDirection:00000000 SetServoDirection
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:500    .text.SetServoDirection:0000004c $d
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:505    .text.Drive:00000000 $t
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:510    .text.Drive:00000000 Drive
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:555    .text.Drive:00000034 $d
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:560    .text.figure8:00000000 $t
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:565    .text.figure8:00000000 figure8
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:686    .text.figure8:000000bc $d
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:696    .text.main:00000000 $t
C:\Users\Josh\AppData\Local\Temp\cctukF3d.s:701    .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_GetDIP_Switch
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
TFC_Delay_mS
TFC_Task
TFC_Init
